"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3034],{94015:e=>{e.exports=JSON.parse('{"functions":[{"name":"validlevel","desc":"Returns if the given call-stack level is a valid level.","params":[{"name":"level","desc":"The level to check.","lua_type":"number"}],"returns":[{"desc":"If true, the level is valid and can be used on call functions.","lua_type":"boolean"}],"function_type":"static","source":{"line":16,"path":"impl/Libraries/debug.luau"}},{"name":"getinfo","desc":"Returns information about the function that is currently using the given stack frame or of a given function.","params":[{"name":"level","desc":"The level/ function to get the information from.","lua_type":"number | (T...) -> U..."}],"returns":[{"desc":"The information about the function that is currently using the given stack frame or of a given function.","lua_type":"DebugInfo"}],"function_type":"static","errors":[{"lua_type":"level out of range","desc":"The provided stack level was out of range. use debug.validlevel to check if the level is valid before calling this function."}],"source":{"line":28,"path":"impl/Libraries/debug.luau"}}],"properties":[],"types":[],"name":"debug","desc":"Provides functions to collect and modify information of the Luau callstack and Luau functions.","tags":["Library"],"source":{"line":7,"path":"impl/Libraries/debug.luau"}}')}}]);