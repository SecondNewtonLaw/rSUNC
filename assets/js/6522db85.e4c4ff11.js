"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[107],{15069:e=>{e.exports=JSON.parse('{"functions":[{"name":"getgenv","desc":"Obtains the global environment of the executor. Contains all of rSUNC globals.\\n\\n\\n:::info Sandboxing\\nAll threads must be sandboxed. This means that modifications to the current thread\'s global environment should __NOT__ pollute the result of `getgenv`.\\n\\nModifications done to the table returned by `getgenv` must be observable to all threads an executor makes, but not observable to other threads within the VM, such as game threads.\\n:::\\n\\n### Example:\\n```lua\\n\\ndo\\n    -- Thread 1\\n    HelloVariable = \\"Hello\\"\\n    print(HelloVariable) -- prints \'Hello\'\\n    print(HelloVariableViaGetGenv)  -- prints \'nil\'\\n    print(getgenv().HelloVariableViaGetGenv)  -- prints \'nil\'    \\n\\n    getgenv().HelloVariableViaGetGenv = HelloVariable -- Set HelloVariableViaGetGenv to the value of HelloVariable (can be observed by Thread 2!)\\n    print(HelloVariable) -- prints \'Hello\'\\n    print(HelloVariableViaGetGenv)  -- prints \'Hello\'\\n    print(getgenv().HelloVariableViaGetGenv)  -- prints \'Hello\'\\nend\\n-- ...\\ndo\\n    -- Thread 2 (runs after thread 1)\\n    print(HelloVariable) -- prints \'nil\'\\n    print(HelloVariableViaGetGenv)  -- prints \'Hello\'\\n    print(getgenv().HelloVariableViaGetGenv)  -- prints \'Hello\'\\nend\\n\\n```","params":[],"returns":[{"desc":"The global environment of the executor.","lua_type":"{ [any]: any }"}],"function_type":"static","source":{"line":45,"path":"impl/Libraries/rsunc.luau"}},{"name":"getrenv","desc":"Returns the global environment of main thread of Luau. This environment is __different__ from the executor environment.\\n\\n\\n:::info Sandboxing\\nYou must __NOT__ modify this environment under __ANY__ circumstance. __ANY__ modification will be observable by all threads in the VM.\\n:::","params":[],"returns":[{"desc":"","lua_type":"{[any]: any}"}],"function_type":"static","source":{"line":59,"path":"impl/Libraries/rsunc.luau"}},{"name":"getreg","desc":"Returns the Luau registry.","params":[],"returns":[{"desc":"The Luau registry","lua_type":"{[any]: any}"}],"function_type":"static","source":{"line":69,"path":"impl/Libraries/rsunc.luau"}},{"name":"getscriptglobals","desc":"Returns the `_G` and `shared` script globals.","params":[],"returns":[{"desc":"","lua_type":"{ _G: {[any]: any}, shared: {[any]: any} }"}],"function_type":"static","source":{"line":80,"path":"impl/Libraries/rsunc.luau"}}],"properties":[],"types":[],"name":"rsunc","desc":"","tags":["Library"],"source":{"line":6,"path":"impl/Libraries/rsunc.luau"}}')}}]);