{"searchDocs":[{"title":"GcState","type":0,"sectionRef":"#","url":"/rSUNC/api/GcState","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"GcState","url":"/rSUNC/api/GcState#properties","content":" ","version":null,"tagName":"h2"},{"title":"GCThreshold​","type":1,"pageTitle":"GcState","url":"/rSUNC/api/GcState#GCThreshold","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; GcState.GCThreshold: userdata&lt;std::size_t&gt;  Representation in Luau This is a std::size_t, which is a 64-bit integer. Lua(u) cannot represent this type effectively. In order to counteract this, a string is returned when indexed by Lua(u). ","version":null,"tagName":"h3"},{"title":"rSUNCHttpRequest","type":0,"sectionRef":"#","url":"/rSUNC/api/rSUNCHttpRequest","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#properties","content":" ","version":null,"tagName":"h2"},{"title":"Url​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#Url","content":"&lt;/&gt; rSUNCHttpRequest.Url: string The URL to send the request to  ","version":null,"tagName":"h3"},{"title":"Method​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#Method","content":"&lt;/&gt; rSUNCHttpRequest.Method: &quot;GET&quot; | &quot;POST&quot; | &quot;PATCH&quot; | &quot;PUT&quot; | &quot;DELETE&quot; The HTTP method this request needs to be done with  ","version":null,"tagName":"h3"},{"title":"Body​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#Body","content":"&lt;/&gt; rSUNCHttpRequest.Body: string? The body of the HTTP request. May be empty.  ","version":null,"tagName":"h3"},{"title":"Headers​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#Headers","content":"&lt;/&gt; rSUNCHttpRequest.Headers: {[string]: string} Table of HTTP headers.  ","version":null,"tagName":"h3"},{"title":"Cookies​","type":1,"pageTitle":"rSUNCHttpRequest","url":"/rSUNC/api/rSUNCHttpRequest#Cookies","content":"&lt;/&gt; rSUNCHttpRequest.Cookies: {[string]: string} Table of Cookies. ","version":null,"tagName":"h3"},{"title":"ListfilesOptions","type":0,"sectionRef":"#","url":"/rSUNC/api/ListfilesOptions","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ListfilesOptions","url":"/rSUNC/api/ListfilesOptions#properties","content":" ","version":null,"tagName":"h2"},{"title":"Recursive​","type":1,"pageTitle":"ListfilesOptions","url":"/rSUNC/api/ListfilesOptions#Recursive","content":"&lt;/&gt; ListfilesOptions.Recursive: boolean? If true, recursively list contents of all subdirectories. Defaults to false.  ","version":null,"tagName":"h3"},{"title":"Hidden​","type":1,"pageTitle":"ListfilesOptions","url":"/rSUNC/api/ListfilesOptions#Hidden","content":"&lt;/&gt; ListfilesOptions.Hidden: boolean? If true, include hidden files and folders in the listing. Defaults to true. ","version":null,"tagName":"h3"},{"title":"CallStack","type":0,"sectionRef":"#","url":"/rSUNC/api/CallStack","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"CallStack","url":"/rSUNC/api/CallStack#properties","content":" ","version":null,"tagName":"h2"},{"title":"currentline​","type":1,"pageTitle":"CallStack","url":"/rSUNC/api/CallStack#currentline","content":"&lt;/&gt; CallStack.currentline: number The line at which the 'call' to the following callstack will be performed.  ","version":null,"tagName":"h3"},{"title":"func​","type":1,"pageTitle":"CallStack","url":"/rSUNC/api/CallStack#func","content":"&lt;/&gt; CallStack.func: (T...) → U... The function that this function is a callstack of. ","version":null,"tagName":"h3"},{"title":"Connection","type":0,"sectionRef":"#","url":"/rSUNC/api/Connection","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#properties","content":" ","version":null,"tagName":"h2"},{"title":"ForeignState​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#ForeignState","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.ForeignState: boolean (Read-Only) A boolean indicating if the connection belongs to a different Luau Virtual Machine (e.g., an Actor thread) or is a C function connection.  ","version":null,"tagName":"h3"},{"title":"Function​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Function","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.Function: ((...any) → ...any)? (Read-Only) The Luau function associated with this connection. Returns nil if ForeignState is true.  ","version":null,"tagName":"h3"},{"title":"Enabled​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Enabled","content":"&lt;/&gt; Connection.Enabled: boolean (Read/Write) A boolean indicating if the connection is currently enabled. Setting this to false is equivalent to calling Disable, setting it to true is equivalent to calling Enable.  ","version":null,"tagName":"h3"},{"title":"LuaConnection​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#LuaConnection","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.LuaConnection: boolean (Read-Only) A boolean indicating if this is a connection to a Luau function (as opposed to a C function).  ","version":null,"tagName":"h3"},{"title":"Thread​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Thread","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.Thread: thread? (Read-Only) The Luau thread (coroutine) this connection belongs to. Returns nil if ForeignState is true.  ","version":null,"tagName":"h3"},{"title":"IsOnce​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#IsOnce","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Connection.IsOnce: boolean (Read-Only) A boolean indicating if this connection was created using ConnectOnce. Such connections automatically disconnect after firing once. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#functions","content":" ","version":null,"tagName":"h2"},{"title":"Disconnect​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Disconnect","content":"&lt;/&gt; Connection:Disconnect() → () Disconnects the signal connection. After calling this, the Connection object becomes unusable and attempting to access its properties or methods will error.  ","version":null,"tagName":"h3"},{"title":"Enable​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Enable","content":"&lt;/&gt; Connection:Enable() → () Enables the connection if it was previously disabled.  ","version":null,"tagName":"h3"},{"title":"Disable​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Disable","content":"&lt;/&gt; Connection:Disable() → () Disables the connection without disconnecting it. The connection can be re-enabled later using Enable or by setting the Enabled property to true.  ","version":null,"tagName":"h3"},{"title":"Fire​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Fire","content":"&lt;/&gt; Connection:Fire( ...: any-- Arguments to pass to the connected function. ) → () Fires the connected function immediately with the provided arguments. Does nothing if ForeignState is true. If IsOnce is true, the connection will be disconnected after firing.  ","version":null,"tagName":"h3"},{"title":"Defer​","type":1,"pageTitle":"Connection","url":"/rSUNC/api/Connection#Defer","content":"&lt;/&gt; Connection:Defer( ...: any-- Arguments to pass to the connected function when deferred. ) → () Schedules the connected function to be executed later (deferred) with the provided arguments via task.defer. Does nothing if ForeignState is true. If IsOnce is true, the connection will be disconnected after firing. ","version":null,"tagName":"h3"},{"title":"ThreadInitializationInformation","type":0,"sectionRef":"#","url":"/rSUNC/api/ThreadInitializationInformation","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ThreadInitializationInformation","url":"/rSUNC/api/ThreadInitializationInformation#properties","content":" ","version":null,"tagName":"h2"},{"title":"thread​","type":1,"pageTitle":"ThreadInitializationInformation","url":"/rSUNC/api/ThreadInitializationInformation#thread","content":"&lt;/&gt; ThreadInitializationInformation.thread: thread? The parent thread. If nil, the caller is assumed to be the parent.  ","version":null,"tagName":"h3"},{"title":"script​","type":1,"pageTitle":"ThreadInitializationInformation","url":"/rSUNC/api/ThreadInitializationInformation#script","content":"&lt;/&gt; ThreadInitializationInformation.script: LocalScript | Script | ModuleScript  The script global for the thread. This will not modify the thread's RobloxExtraSpace/userdata field.  ","version":null,"tagName":"h3"},{"title":"identity​","type":1,"pageTitle":"ThreadInitializationInformation","url":"/rSUNC/api/ThreadInitializationInformation#identity","content":"&lt;/&gt; ThreadInitializationInformation.identity: number The identity of the thread (execution context), if nil, the parents execution context is used. WARNING This value must be between 0 and 8, else the parent execution context is used.  ","version":null,"tagName":"h3"},{"title":"env​","type":1,"pageTitle":"ThreadInitializationInformation","url":"/rSUNC/api/ThreadInitializationInformation#env","content":"&lt;/&gt; ThreadInitializationInformation.env: {[any]: any} | nil The environment of the thread, if nil, a sandboxed version of the parent's environment is used. ","version":null,"tagName":"h3"},{"title":"global","type":0,"sectionRef":"#","url":"/rSUNC/api/global","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#properties","content":" ","version":null,"tagName":"h2"},{"title":"_RENV​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#_RENV","content":"Global &lt;/&gt; global._RENV: {[any]: any} The global roblox environment, as a table.  ","version":null,"tagName":"h3"},{"title":"_GENV​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#_GENV","content":"Global &lt;/&gt; global._GENV: {[any]: any} The global executor environment, as a table.  ","version":null,"tagName":"h3"},{"title":"_ENV​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#_ENV","content":"Global &lt;/&gt; global._ENV: {[any]: any} The current thread's environment, as a table. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#functions","content":" ","version":null,"tagName":"h2"},{"title":"gettenv​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#gettenv","content":"Global &lt;/&gt; global.gettenv( thread: thread-- The thread to fetch the environment of. ) → {[any]: any}-- The environment of the thread. Fetches the environment of a thread.  ","version":null,"tagName":"h3"},{"title":"httpget​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#httpget","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields Global &lt;/&gt; global.httpget( url: string-- The URL to send the request to. ) → string-- The body of the response. Fetches the Body of an HTTP server using a GET HTTP request. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"global","url":"/rSUNC/api/global##","content":"Type\tDescriptionInvalid protocol (expected 'http://' or 'https://')\tThe provided URL is not on the form of an HTTP request.  ","version":null,"tagName":"h3"},{"title":"messagebox​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#messagebox","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields Global &lt;/&gt; global.messagebox( text: string,-- The text to display in the message box. caption: string,-- The caption to display in the message box. flags: number-- The flags to apply to the message box. ) → number-- The result of the message box. Creates a Win32 MessageBox with the provided text, caption, and flags. Yields until the message box is closed. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"global","url":"/rSUNC/api/global##","content":"Type\tDescriptionWin32 error '%s'\tAn error occured while trying to display the messagebox. The Win32 error will be in-place of the '%s'.  ","version":null,"tagName":"h3"},{"title":"getgenv​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#getgenv","content":"Global &lt;/&gt; global.getgenv() → {[any]: any}-- The global environment of the executor. Obtains the global environment of the executor. Contains all of rSUNC globals. Sandboxing All threads must be sandboxed. This means that modifications to the current thread's global environment should NOT pollute the result of getgenv. Modifications done to the table returned by getgenv must be observable to all threads an executor makes, but not observable to other threads within the VM, such as game threads. Example: do -- Thread 1 HelloVariable = &quot;Hello&quot; print(HelloVariable) -- prints 'Hello' print(HelloVariableViaGetGenv) -- prints 'nil' print(getgenv().HelloVariableViaGetGenv) -- prints 'nil' getgenv().HelloVariableViaGetGenv = HelloVariable -- Set HelloVariableViaGetGenv to the value of HelloVariable (can be observed by Thread 2!) print(HelloVariable) -- prints 'Hello' print(HelloVariableViaGetGenv) -- prints 'Hello' print(getgenv().HelloVariableViaGetGenv) -- prints 'Hello' end -- ... do -- Thread 2 (runs after thread 1) print(HelloVariable) -- prints 'nil' print(HelloVariableViaGetGenv) -- prints 'Hello' print(getgenv().HelloVariableViaGetGenv) -- prints 'Hello' end   ","version":null,"tagName":"h3"},{"title":"getrenv​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#getrenv","content":"Global &lt;/&gt; global.getrenv() → {[any]: any}-- The global environment of main thread of Luau. Returns the global environment of main thread of Luau. This environment is different from the executor environment. Sandboxing You must NOT modify this environment under ANY circumstance. ANY modification will be observable by all threads in the VM.  ","version":null,"tagName":"h3"},{"title":"getreg​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#getreg","content":"Global &lt;/&gt; global.getreg() → {[any]: any}-- The Luau registry Returns the Luau registry.  ","version":null,"tagName":"h3"},{"title":"getscriptglobals​","type":1,"pageTitle":"global","url":"/rSUNC/api/global#getscriptglobals","content":"Global &lt;/&gt; global.getscriptglobals() → { _G: {[any]: any}, shared: {[any]: any} } Returns the _G and shared script globals. ","version":null,"tagName":"h3"},{"title":"How can I contribute to rSUNC","type":0,"sectionRef":"#","url":"/rSUNC/docs/HowCanIContribute","content":"How can I contribute to rSUNC Great! Thanks for trying to contribute to rSUNC. To contribute to rSUNC, you may fork our repository to begin. Then, head to either the docs or the impl folder, in which you will find a variety of files. To edit the documentation of rSUNC, which includes information on the spec and other details, edit the docs folder. If you want to add a new Library or edit one, head to the impl/Libraries/ folder, and edit or create the appropriate library, which you must tag according to the readme inside of impl/. If you need to create a new native type, say to represent a native structure in C/C++, then you must create a new definition in the impl/Types Once you have contributed, add yourself to the README's Contributors section, and make a pull request.","keywords":"","version":"Next"},{"title":"Index","type":0,"sectionRef":"#","url":"/rSUNC/docs/intro","content":"Index Index for rSUNC docs. !! Important For Executor Developers !! Luau Compiler Complance Why should I use rSUNC? rSUNC and UNC How to contirbute?","keywords":"","version":"Next"},{"title":"rSUNC and UNC","type":0,"sectionRef":"#","url":"/rSUNC/docs/UNCRetroCompatibility","content":"rSUNC and UNC rSUNC remains partly compatible with the now old UNC, it is partly compatible due to the fact some functions, such as the entirety of the cache library, has been replaced by the instances library, with the functions it once contained renamed to be far more descriptive. The documentation also attempts to be as descriptive as possible as to what the function should do, the arguments it should take, and the errors that they should throw on unique cases. This allows script developers to use pcall and obtain the error if applicable, and attempt to handle them in some way by themselves. This also allows executor developers to know how a function should behave and what it should do. This allows developers to gracefully handle errors, as well as display better detail errors. Instead of a simple Unsupported you can have a fancier Function 'getfunctionhash' does not support the hashing required. This can help you debug the scripts in a more efficient manner. Most of rSUNC remains compatible with UNC. However as more developments come, the standards drift further and further apart.","keywords":"","version":"Next"},{"title":"scheduler","type":0,"sectionRef":"#","url":"/rSUNC/api/scheduler","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler#types","content":" ","version":null,"tagName":"h2"},{"title":"SchedulerJobName​","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler#SchedulerJobName","content":"&lt;/&gt; type SchedulerJobName = &quot;RenderJob&quot; | &quot;WaitingHybridScriptsJob&quot; | &quot;ModelMeshJob&quot; | &quot;GcJob&quot; | &quot;HeartbeatTask&quot; | &quot;PhysicsJob&quot; | &quot;PathUpdateJob&quot; | &quot;NavigationJob&quot; | &quot;GenericDataModelJob&quot; | &quot;HttpRbxApiJob&quot;  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler#functions","content":" ","version":null,"tagName":"h2"},{"title":"connectprestep​","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler#connectprestep","content":"&lt;/&gt; scheduler.connectprestep( jobName: SchedulerJobName, callback: (T...) → U... ) → SchedulerJobStepConnection Connects a function to run before a Step of the specified job is ran. Callback Note The callback you provide CANNOT yield or block the thread, or you will block the roblox main thread. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler##","content":"Type\tDescriptionUnknown Job\tThis job doesn't exist or is not supported.  ","version":null,"tagName":"h3"},{"title":"connectpoststep​","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler#connectpoststep","content":"&lt;/&gt; scheduler.connectpoststep( jobName: SchedulerJobName, callback: (T...) → U... ) → SchedulerJobStepConnection Connects a function to run after a Step of the specified job is ran. Callback Note The callback you provide CANNOT yield or block the thread, or you will block the roblox main thread. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"scheduler","url":"/rSUNC/api/scheduler##","content":"Type\tDescriptionUnknown Job\tThis job doesn't exist or is not supported. ","version":null,"tagName":"h3"},{"title":"Luau Compiler Compliance","type":0,"sectionRef":"#","url":"/rSUNC/docs/CompilerCompliance","content":"Luau Compiler Compliance When compiling bytecode using Luau::compile, the bytecode emitted will contain the GETIMPORTS bytecode instruction. This is generally fine on tables that are immutable (meaning they do not change), however globals such as workspace, game and a few others such as script cannot suffer from this behaviour. Why is this an issue?​ If we inspect luau_load, we will see that when it is deserializing and loading the bytecode into memory, they do something tricky on the constants, they have a specific clase called LBC_CONSTANT_IMPORT. This is a Luau optimization that attempts to obtain everything a function may need that is known to not change, in order to improve performance. This is great! However, this indirectly inlines properties from globals such as game, workspace and others. This behaviour is bad. ROBLOX themselves know this is an issue, and have made internally a small list for the compiler to not optimize these on the CompilerOptions::mutableGlobals field of the compiler options, which is the following: const char *mutableGlobals[] = { &quot;Game&quot;, &quot;Workspace&quot;, &quot;game&quot;, &quot;plugin&quot;, &quot;script&quot;, &quot;shared&quot;, &quot;workspace&quot;, nullptr }; However, rSUNC has its own set of mutable globals which must also be defined on this array to prevent issues, which are the following _ENV, _GENV and _RENV. This also includes Luau optimizations for Vector types, Luau optimizes them properly on Roblox-compiled code as they have already resolved this issue, however we do not have this resolved! In order to allow the Vector3 optimizations to shine we must set the CompilerOptions::vectorLib, CompilerOptions::vectorCtor and CompilerOptions::vectorType to the appropriate values, being Vector3, new and Vector3. We also need to note that you must make use of CompilerOptions::optimizationLevel to be of 1 and the CompilerOptions::debugLevel to be of 1. In summary, we must make our compiler play nice with ROBLOX, as well as with our types. This concludes on a simple CompileLuau function. std::string CompileLuau(std::string_view szLuauCode) { const char *mutableGlobals[] = { &quot;Game&quot;, &quot;Workspace&quot;, &quot;game&quot;, &quot;plugin&quot;, &quot;script&quot;, &quot;shared&quot;, &quot;workspace&quot;, &quot;_ENV&quot;, &quot;_GENV&quot;, &quot;_RENV&quot;, // rSUNC globals. nullptr }; auto compileOpts = Luau::CompileOptions { }; compileOpts.optimizationLevel = 1; compileOpts.debugLevel = 1; compileOpts.vectorLib = &quot;Vector3&quot;; compileOpts.vectorCtor = &quot;new&quot;; compileOpts.vectorType = &quot;Vector3&quot;; compileOpts.mutableGlobals = mutableGlobals; return Luau::compile(szLuauCode.data(), compileOpts, {}, BYTECODE_ENCODER /* Studio requires no bytecode encoder! */); } This function contains all elements required to have your compiler be rSUNC compliant.","keywords":"","version":"Next"},{"title":"Why should you use rSUNC?","type":0,"sectionRef":"#","url":"/rSUNC/docs/WhyrSUNC","content":"Why should you use rSUNC? rSUNC has been built from the ground up with new libraries and functions, providing a new way of using executors. These functions hand off more control to script developers as well as providing functions for the changes brought forward by the change of Luau, such as Native Code Generation! These libraries ensure that rSUNC can stay up-to-date with the latest changes, as well as providing a new working base for executors, who would otherwise be implementing UNC, a standard that has began to show its age more and more with the passing of time, and has been deprecated for quite some time now.","keywords":"","version":"Next"},{"title":"rSUNCHttpResponse","type":0,"sectionRef":"#","url":"/rSUNC/api/rSUNCHttpResponse","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#properties","content":" ","version":null,"tagName":"h2"},{"title":"Body​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#Body","content":"&lt;/&gt; rSUNCHttpResponse.Body: string The response of the HTTP Server.  ","version":null,"tagName":"h3"},{"title":"StatusMessage​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#StatusMessage","content":"&lt;/&gt; rSUNCHttpResponse.StatusMessage: string A string representation of the StatusCode property.  ","version":null,"tagName":"h3"},{"title":"StatusCode​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#StatusCode","content":"&lt;/&gt; rSUNCHttpResponse.StatusCode: number The Http Status Code of the request.  ","version":null,"tagName":"h3"},{"title":"Headers​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#Headers","content":"&lt;/&gt; rSUNCHttpResponse.Headers: {[string]: string} Table of HTTP headers.  ","version":null,"tagName":"h3"},{"title":"Success​","type":1,"pageTitle":"rSUNCHttpResponse","url":"/rSUNC/api/rSUNCHttpResponse#Success","content":"&lt;/&gt; rSUNCHttpResponse.Success: boolean Whether the request was successful. ","version":null,"tagName":"h3"},{"title":"ItemProperties","type":0,"sectionRef":"#","url":"/rSUNC/api/ItemProperties","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#properties","content":" ","version":null,"tagName":"h2"},{"title":"Size​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#Size","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ItemProperties.Size: number The size of the file in bytes.  ","version":null,"tagName":"h3"},{"title":"CreationTime​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#CreationTime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ItemProperties.CreationTime: number The time the file was created, typically as a Unix timestamp (seconds since epoch).  ","version":null,"tagName":"h3"},{"title":"LastModifiedTime​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#LastModifiedTime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; ItemProperties.LastModifiedTime: number The time the file was last modified, typically as a Unix timestamp (seconds since epoch).  ","version":null,"tagName":"h3"},{"title":"IsHidden​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#IsHidden","content":"&lt;/&gt; ItemProperties.IsHidden: boolean Indicates if the file is marked as hidden by the operating system. -- Settable via setproperties  ","version":null,"tagName":"h3"},{"title":"IsReadOnly​","type":1,"pageTitle":"ItemProperties","url":"/rSUNC/api/ItemProperties#IsReadOnly","content":"&lt;/&gt; ItemProperties.IsReadOnly: boolean Indicates if the file is marked as read-only by the operating system. -- Settable via setproperties ","version":null,"tagName":"h3"},{"title":"SchedulerJobStepConnection","type":0,"sectionRef":"#","url":"/rSUNC/api/SchedulerJobStepConnection","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#properties","content":" ","version":null,"tagName":"h2"},{"title":"IsConnected​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#IsConnected","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; SchedulerJobStepConnection.IsConnected: boolean If true, this connection is being actively fired, otherwise it was disconnected.  ","version":null,"tagName":"h3"},{"title":"IsEnabled​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#IsEnabled","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; SchedulerJobStepConnection.IsEnabled: boolean If true, this connection can be fired, otherwise it was temporarily disabled with :Disable() ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#functions","content":" ","version":null,"tagName":"h2"},{"title":"Enable​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#Enable","content":"&lt;/&gt; SchedulerJobStepConnection:Enable() → () Enables the connection to be fired, if disabled with :Disable()  ","version":null,"tagName":"h3"},{"title":"Disable​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#Disable","content":"&lt;/&gt; SchedulerJobStepConnection:Disable() → () Prevents this connection from being temporarily fired, can be re-enabled with :Enable()  ","version":null,"tagName":"h3"},{"title":"Disconnect​","type":1,"pageTitle":"SchedulerJobStepConnection","url":"/rSUNC/api/SchedulerJobStepConnection#Disconnect","content":"&lt;/&gt; SchedulerJobStepConnection:Disconnect() → () Disconnects this connection which stops it from being fired. This will make this connection unusable in the future. ","version":null,"tagName":"h3"},{"title":"metatables","type":0,"sectionRef":"#","url":"/rSUNC/api/metatables","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#types","content":" ","version":null,"tagName":"h2"},{"title":"metafield​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#metafield","content":"Type &lt;/&gt; type metafield = &quot;__index&quot; | &quot;__newindex&quot; | &quot;__mode&quot; | &quot;__namecall&quot; | &quot;__call&quot; | &quot;__iter&quot; | &quot;__len&quot; | &quot;__eq&quot; | &quot;__add&quot; | &quot;__sub&quot; | &quot;__mul&quot; | &quot;__div&quot; | &quot;__idiv&quot; | &quot;__mod&quot; | &quot;__pow&quot; | &quot;__unm&quot; | &quot;__lt&quot; | &quot;__le&quot; | &quot;__concat&quot; | &quot;__type&quot; All possible metafields in Luau. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#functions","content":" ","version":null,"tagName":"h2"},{"title":"getrawmetatable​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#getrawmetatable","content":"&lt;/&gt; metatables.getrawmetatable( object: T-- The object to get the metatable of. ) → {[metafield]: any} | nil-- The metatable of the object. Returns the metatable of the given object, even if the __metatable metafield is set. Hooking This function should never be used to perform metatable hooks. Use metatables.hookmetamethod instead.  ","version":null,"tagName":"h3"},{"title":"setrawmetatable​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#setrawmetatable","content":"&lt;/&gt; metatables.setrawmetatable( object: T,-- The object to get the metatable of. metatable: {[metafield]: any} | nil-- The metatable to set. ) → {[metafield]: any} | nil-- The previous metatable of the object (if it had any). Sets the metatable of object and returns the previous metatable of it..  ","version":null,"tagName":"h3"},{"title":"getmetafield​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#getmetafield","content":"&lt;/&gt; metatables.getmetafield( object: T,-- The object with a metatable to get the metafield of. metafield: metafield-- The metafield to get. ) → U-- The metafield of the object. Returns the metafield (if existing) of the metatable the object has. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables##","content":"Type\tDescriptioninvalid metafield\tThe metatable is invalid (bad metafield name) no metatable found\tNo metatable was found on the given object. no metafield found\tNo metafield was found on the given object's metatable.  ","version":null,"tagName":"h3"},{"title":"hasmetafield​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#hasmetafield","content":"&lt;/&gt; metatables.hasmetafield( object: T,-- The object to check. metafield: metafield-- The metafield to check. ) → boolean-- If true, the object has the metafield. Checks if the given object has a specific metafield. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables##","content":"Type\tDescriptioninvalid metafield\tThe metatable is invalid (bad metafield name) no metatable found\tNo metatable was found on the given object.  ","version":null,"tagName":"h3"},{"title":"hasmetatable​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#hasmetatable","content":"&lt;/&gt; metatables.hasmetatable( object: T-- The object to check. ) → boolean-- If true, the object has a metatable. Checks if the given object has a metatable.  ","version":null,"tagName":"h3"},{"title":"isreadonly​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#isreadonly","content":"&lt;/&gt; metatables.isreadonly( object: {[any]: any}-- The table to check. ) → boolean-- If true, the table is read-only. Checks if the the given table is marked as read-only. Usage Normally used on metatables to allow modifying the table, but works on any table, regardless if they're a metatable or not,  ","version":null,"tagName":"h3"},{"title":"hookmetamethod​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#hookmetamethod","content":"&lt;/&gt; metatables.hookmetamethod( object: T,-- The object to hook. metamethod: metafield,-- The metamethod to hook. callback: (U...) → O...-- The callback to hook the metamethod with. ) → (U...) → O...-- The original metamethod Hooks the given object's metatable metamethod with the provided callback. Implementation This function must contain an argument guard which controls that the function is given the correct number of arguments. This function should use a form of hookfunction to hook, and most NOT replace the metatable's metamethods directly. Argument Guard You may disable the integrated argument guard by using a vararg function. This dismisses stack size checks (it is up to you to make sure the correct number of arguments are obtained). Hookfunction This function may inherit errors and warnings from hookfunction. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables##","content":"Type\tDescriptioninvalid metafield\tThe metatable is invalid (bad metafield name) no metatable found\tNo metatable was found on the given object. no metafield found\tNo metafield was found on the given object's metatable. metafield is not a function\tThe metafield is not implemented as a function, but as a property.  ","version":null,"tagName":"h3"},{"title":"restoremetamethod​","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables#restoremetamethod","content":"&lt;/&gt; metatables.restoremetamethod( object: T,-- The object with the metatable and metamethod to restore. metamethod: metafield-- The name of the metamethod to restore. ) → () Restores a metamethod hooked with hookmetamethod. restorefunction This function may inherit errors and warnings from restorefunction! ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"metatables","url":"/rSUNC/api/metatables##","content":"Type\tDescriptioninvalid metafield\tThe metatable is invalid (bad metafield name) no metatable found\tNo metatable was found on the given object. no metafield found\tNo metafield was found on the given object's metatable. metafield is not a function\tThe metafield is not implemented as a function, but as a property. ","version":null,"tagName":"h3"},{"title":"http","type":0,"sectionRef":"#","url":"/rSUNC/api/http","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"http","url":"/rSUNC/api/http#functions","content":" ","version":null,"tagName":"h2"},{"title":"request​","type":1,"pageTitle":"http","url":"/rSUNC/api/http#request","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; http.request( options: rSUNCHttpRequest-- The parameters for the http request. ) → rSUNCHttpResponse-- A response to the rSUNCHttpRequest. Performs an HTTP request with the given options, providing the given response Headers By default, this function attaches the following headers: {ExecutorName}-User-Identifier\t-- A string unique to each user, and does not change if the script executor is used across computers, useful to check if a user is the same, regardless of computer. {ExecutorName}-Fingerprint -- The hardware identifier of the user, useful to check if the user is using the same computer. User-Agent -- The name and version of the executor.  ","version":null,"tagName":"h3"},{"title":"filesystem","type":0,"sectionRef":"#","url":"/rSUNC/api/filesystem","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#functions","content":" ","version":null,"tagName":"h2"},{"title":"writefile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#writefile","content":"&lt;/&gt; filesystem.writefile( path: string,-- The path to the file. content: string | buffer-- The content to write to the file. ) → () Writes content (string or buffer) to a specified file. Creates the file if it does not exist, and overwrites it if it does. Paths Paths should ideally be relative to a designated workspace or root directory defined by the executor environment. Absolute paths are restricted. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot write to file '%s'\tThe file could not be written to due to permissions or other OS-level issues.  ","version":null,"tagName":"h3"},{"title":"readfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#readfile","content":"&lt;/&gt; filesystem.readfile( path: string,-- The path to the file. asBuffer: boolean-- If true, return content as a buffer; if false (default), return as a string. ) → string | buffer-- The content of the file, either as a string or a buffer based on the asBuffer flag. Reads the content of a specified file, returning it as a string or a buffer. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot read file '%s'\tThe file does not exist or cannot be read due to permissions.  ","version":null,"tagName":"h3"},{"title":"loadfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#loadfile","content":"&lt;/&gt; filesystem.loadfile( path: string-- The path to the Lua file. ) → ( ((...any) → ...any) | nil,-- The loaded chunk as a function, or nil if loading failed. string?-- An error message if loading failed. ) Loads a Lua chunk from the specified file but does not run it. Environment The loaded chunk inherits the environment of the caller. loadstring This function behaves similarly to loadstring but operates on file paths instead of raw strings. Refer to closures.loadstring for potential compilation settings. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot read file '%s'\tThe file does not exist or cannot be read due to permissions.  ","version":null,"tagName":"h3"},{"title":"dofile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#dofile","content":"&lt;/&gt; filesystem.dofile( path: string-- The path to the Lua file. ) → ...any-- The values returned by the executed chunk. Loads and runs a Lua chunk from the specified file. Environment The executed chunk inherits the environment of the caller. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot read file '%s'\tThe file does not exist or cannot be read due to permissions. ...\tAny runtime error originating from the executed chunk.  ","version":null,"tagName":"h3"},{"title":"delfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#delfile","content":"&lt;/&gt; filesystem.delfile( path: string-- The path to the file to delete. ) → () Deletes a specified file. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot delete file '%s'\tThe file does not exist, cannot be deleted due to permissions, or the path isn't a file or other issues.  ","version":null,"tagName":"h3"},{"title":"appendfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#appendfile","content":"&lt;/&gt; filesystem.appendfile( path: string,-- The path to the file. content: string | buffer-- The content to append to the file. ) → () Appends content (string or buffer) to the end of a specified file. Creates the file if it does not exist. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot append to file '%s'\tThe file could not be appended to due to permissions or other OS-level issues.  ","version":null,"tagName":"h3"},{"title":"movefile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#movefile","content":"&lt;/&gt; filesystem.movefile( oldpath: string,-- The current path of the file. newpath: string-- The desired new path for the file. ) → () Moves or renames a file. Does not work on folders. Behavior If newpath already exists, it will overwrite it. Use movefolder for directories. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot move file from '%s' to '%s'\tFailed due to permissions, item not found, `oldpath` is a folder, target path invalid, or other OS issues.  ","version":null,"tagName":"h3"},{"title":"movefolder​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#movefolder","content":"&lt;/&gt; filesystem.movefolder( oldpath: string,-- The current path of the folder. newpath: string-- The desired new path for the folder. ) → () Moves or renames a folder. Does not work on files. Behavior If newpath already exists, it will overwrite it. Use movefile for files. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot move folder from '%s' to '%s'\tFailed due to permissions, item not found, `oldpath` is a file, target path invalid, or other OS issues.  ","version":null,"tagName":"h3"},{"title":"copyfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#copyfile","content":"&lt;/&gt; filesystem.copyfile( sourcepath: string,-- The path of the file to copy. destinationpath: string-- The path where the copy should be created. ) → () Copies a file. Behavior If destinationpath already exists, it will likely be overwritten. This function typically only works for files. For copying folders, use copyfolder. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot copy file from '%s' to '%s'\tFailed due to permissions, source not found, destination path invalid, or other OS issues.  ","version":null,"tagName":"h3"},{"title":"copyfolder​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#copyfolder","content":"&lt;/&gt; filesystem.copyfolder( sourcepath: string,-- The path of the folder to copy. destinationpath: string-- The path where the copied folder should be created. ) → () Recursively copies a folder and its contents. Behavior If destinationpath already exists as a folder, the contents of sourcepath might be merged into it, or it might error, depending on implementation. If destinationpath exists as a file, it will error. This function recursively copies all subfolders and files. Use copyfile for single files. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot copy folder from '%s' to '%s'\tFailed due to permissions, source not found, `sourcepath` is a file, destination path invalid, or other OS issues during recursion.  ","version":null,"tagName":"h3"},{"title":"listfiles​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#listfiles","content":"&lt;/&gt; filesystem.listfiles( path: string,-- The path to the directory. options: ListfilesOptions?-- A table containing options like Recursive (boolean, default false) and Hidden (boolean, default true). ) → {string}-- A list of names (or relative paths if recursive) of files and folders within the directory. Lists all files and folders within a specified directory path according to the provided options. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot list directory '%s'\tThe directory does not exist or cannot be accessed.  ","version":null,"tagName":"h3"},{"title":"isfile​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#isfile","content":"&lt;/&gt; filesystem.isfile( path: string-- The path to check. ) → boolean-- True if the path points to an existing file, false otherwise. Checks if a given path points to an existing file.  ","version":null,"tagName":"h3"},{"title":"isfolder​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#isfolder","content":"&lt;/&gt; filesystem.isfolder( path: string-- The path to check. ) → boolean-- True if the path points to an existing folder, false otherwise. Checks if a given path points to an existing folder (directory).  ","version":null,"tagName":"h3"},{"title":"makefolder​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#makefolder","content":"&lt;/&gt; filesystem.makefolder( path: string-- The path where the folder should be created. ) → () Creates a new folder (directory) at the specified path. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot create folder '%s'\tThe folder could not be created (e.g., path already exists as a file, permissions issue, invalid path).  ","version":null,"tagName":"h3"},{"title":"delfolder​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#delfolder","content":"&lt;/&gt; filesystem.delfolder( path: string-- The path to the folder to delete. ) → () Deletes a specified folder (directory) and all of its contents recursively. Behavior This function permanently deletes the specified folder and all files and subfolders within it. Use with caution. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot delete folder '%s'\tThe folder does not exist, cannot be deleted due to permissions, or the path isn't a folder or other issues (e.g., a file within is locked).  ","version":null,"tagName":"h3"},{"title":"getproperties​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#getproperties","content":"&lt;/&gt; filesystem.getproperties( path: string-- The path to the file or folder. ) → ItemProperties?-- A table containing properties (size, creation time, last modified time, hidden, read-only), or nil if the path does not exist. Size will always be 0 for folders. Retrieves properties of a specified file or folder. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot get properties for '%s'\tPermissions error or other OS issue preventing access.  ","version":null,"tagName":"h3"},{"title":"setproperties​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#setproperties","content":"&lt;/&gt; filesystem.setproperties( path: string,-- The path to the file or folder. properties: ItemProperties-- A table containing the properties to set. Only IsHidden and IsReadOnly are typically settable for both files and folders. Other properties in the table are ignored. ) → () Sets modifiable properties of a specified file or folder. Settable Properties Generally, only the IsHidden and IsReadOnly flags can be reliably modified. Timestamps and size are usually managed by the OS. The function should ideally ignore attempts to set read-only properties specified in the input table. The effect of IsReadOnly on folders may vary by OS. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot set properties for '%s'\tThe path does not exist, permissions error, or property modification failed.  ","version":null,"tagName":"h3"},{"title":"getcustomasset​","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem#getcustomasset","content":"&lt;/&gt; filesystem.getcustomasset( path: string-- The path to the local asset file. ) → string-- A Roblox asset URL (e.g., rbxasset://some_generated_identifier). Takes a path to a local file (e.g., an image) and returns a Roblox content URL (e.g., rbxasset://&lt;filehash&gt;) that can be used to load the asset within Roblox interfaces. Usage This function allows importing local files (like images, sounds, etc.) for use in Roblox UIs or parts by converting them into a temporary or cached asset URL recognized by the engine. The underlying mechanism might involve hashing the file content or uploading it to a temporary storage accessible by the client. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"filesystem","url":"/rSUNC/api/filesystem##","content":"Type\tDescriptionCannot process asset '%s'\tThe file does not exist or could not be processed. ","version":null,"tagName":"h3"},{"title":"memory","type":0,"sectionRef":"#","url":"/rSUNC/api/memory","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#functions","content":" ","version":null,"tagName":"h2"},{"title":"getgc​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#getgc","content":"&lt;/&gt; memory.getgc( includeTables: boolean?-- Whether to include tables in the list. Defaults to false if not provided. ) → {vector | buffer | {[any]: any} | string | (...any) → ...any} | {vector | buffer | string | (...any) → ...any}-- A list of objects currently 'alive' in the garbage collector. Returns a list of objects currently 'alive' in the garbage collector. Implementation This function must automatically suspend the GC to retrieve the list of objects that are correct for when the call originates.  ","version":null,"tagName":"h3"},{"title":"suspendgc​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#suspendgc","content":"&lt;/&gt; memory.suspendgc() → GcState-- The current state of the Garbage Collector, before suspension. Suspends all GC operations temporarily, returning the current state of the Garbage Collector to resume it. Memory Usage After this function is called, memory usage may increase, as after this call the garbage collector is simply no longer collecting memory. You may forcefully request the GC to run using memory.gc or memory.stepgc. Granting you full control over the GC. Resumption after Suspension After the Garbage Collector is suspended, a call to memory.resumegc must follow eventually. If the thread does not resume the GC and it stops execution (i.e.: thread yields or dies), it will automatically resume itself on the next scheduler cycle in order to prevent a memory leak. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory##","content":"Type\tDescriptionAlready suspended\tThe Garbage collector is already suspended. You must first resume it using memory.resumegc before calling memory.suspendgc again.  ","version":null,"tagName":"h3"},{"title":"resumegc​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#resumegc","content":"&lt;/&gt; memory.resumegc() → () Resumes the Garbage Collector from the previous state ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory##","content":"Type\tDescriptionGarbage Collector Not Suspended\tThe garbage collector is not suspended, you cannot resume it!  ","version":null,"tagName":"h3"},{"title":"getgcstate​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#getgcstate","content":"&lt;/&gt; memory.getgcstate() → GcState-- The current state of the Garbage Collector Retrieves a copy of the current state of the garbage collector.  ","version":null,"tagName":"h3"},{"title":"gc​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#gc","content":"&lt;/&gt; memory.gc() → () Executes a full garbage collection cycle, regardless if it should be ran or not. This will temporarily stop the world to execute a full GC step. WARNING This may have a performance cost depending on how big the heap is, and could temporarily pause Roblox!  ","version":null,"tagName":"h3"},{"title":"stepgc​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#stepgc","content":"&lt;/&gt; memory.stepgc() → () Executes a step on the garbage collection cycle, regardless if it should be ran or not.  ","version":null,"tagName":"h3"},{"title":"isreferenced​","type":1,"pageTitle":"memory","url":"/rSUNC/api/memory#isreferenced","content":"&lt;/&gt; memory.isreferenced( object: any-- The object to check. ) → boolean Checks if the given object is currently referenced in the Lua(u) registry. Remarks This function checks both registry keys and values in search of the given object. This means that if getreg()[object] holds a value, this function must return true. Examples local part = Instance.new(&quot;Part&quot;) getreg()[part] = true assert(memory.isreferenced(part) == true, &quot;memory.isreferenced must return true once the object is present in the registry, be it in a key, or in a value!&quot;) getreg()[part] = nil assert(memory.isreferenced(part) == false, &quot;memory.isreferenced must return false once the object is no longer present in the registry!&quot;)  ","version":null,"tagName":"h3"},{"title":"closures","type":0,"sectionRef":"#","url":"/rSUNC/api/closures","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#functions","content":" ","version":null,"tagName":"h2"},{"title":"getfunctionhash​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#getfunctionhash","content":"&lt;/&gt; closures.getfunctionhash( fn: (T...) → U...,-- The function to hash. hashType: &quot;SHA384&quot; | &quot;BLAKE2B&quot; | &quot;BLAKE3&quot;-- The hash type, defaults to SHA384. ) → string-- The hex representation of the selected hashType hash of the function. Provides a hash with a digest size of 48 bytes (384 bits) in hex format for the given luau function Implementation You must use the instructions and constants of the given function to obtain the hash. Compiler If your function is outputting different hashes every time its called, then you may have forgotten to account for Compiler settings. We recommend you read this post to know to resolve this issue and make your Luau compiler rSUNC compliant. newcclosures/ newlclosure hashing For newcclosures and newlclosures, the result of the hash must be come from the 'deepest' closure it wraps. If such a closure is a C closure, then the function must error. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures##","content":"Type\tDescriptionthe closure must resolve to a Luau closure\tA wrapper function was provided, but when resolving its root closure, it didn't point to a luau closure. function must be a Luau closure.\tThe first parameter was a C function instead of a Luau function. Unsupported hash type.\tThe given hash type is not supported by the executor.  ","version":null,"tagName":"h3"},{"title":"hookfunction​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#hookfunction","content":"&lt;/&gt; closures.hookfunction( fn: (T...) → U...,-- Function to hook. hook: (T...) → U...-- The hook. ) → (T...) → U...-- The old/original function. Hooks the given function with the desired hook. This function supports hooking all kinds of closures, from Lua to C, C to Lua, etc. Implementations Some implementations of this function may bypass upvalue limits for you. If this is not the case, wrap hook in newcclosure/newlclosure before calling hookfunction. Restoring Hooked Functions You can restore functions hooked with hookfunction using restorefunction, in case restorefunction is not available you may unhook by calling hookfunction with the first function being the hooked function, and the second being the original one. Proto and savedpc When a proto is hooked and it is on a callstack of any thread you must emit a clone of it, and set the func parameter of the callstack to the clone. This will prevent a vulnerability where, upon returning from a yield or C code, the savedpc which was set with the original proto, attempts to resume execution in the new proto. This causes: - Crashes in the form of Segmentation Faults - Line number error to be displayed improperly. Among other things, you must either emit a clone of the proto or replace the callstack of that thread with the hooked one and perform all proper validation for it. Example of line number being dislayed improperly if the function implementation is vulnerable: https://i.imgur.com/5sSfnut.png RbxStu V4 has fixed this issue already! Vulnerability test code: local bFinishedExecution = false local bExecuted = false local a local function b() print&quot;b babyyy&quot; print&quot;b baby&quot; print&quot;b babyyy&quot; restorefunction(a) -- may be affected as well, and you must apply similar fixes! warn(&quot;im b&quot;) bExecuted = true end a = function() local x = hookfunction(a, b) task.wait() print(&quot;I'm a&quot;) bFinishedExecution = true return x end local s, e = pcall(a) assert(s, &quot;savedpc [1]&quot;) assert((bFinishedExecution and not bExecuted) or (not bFinishedExecution and bExecuted), &quot;savedpc [2]&quot;) print(&quot;no issues most likely&quot;) --[[ When hooking and suspending, the current instruction is saved into the threads' CallInfo-&gt;savedpc to resume. But as we have changed the Proto object, the address and offset of this savedpc, is NO LONGER VALID! Attempting to do anything with it would likely yield us either: a Luau C error with line number of the error in a completely invalid line, undefined behaviour and inexplicable crashes. This is a potential ACE that MUST be fixed and handled properly. ]] Examples: Testing hookfunction and restorefunction: local function a() return &quot;baa&quot; end local function b() return &quot;caa&quot; end local aReturn = a() local bReturn = b() local hooked = closures.hookfunction(a, b) local hookedReturn = hooked() assert(hookedReturn == aReturn) assert(a() == b() and a() == bReturn) assert(hooked ~= a and b ~= a) closures.restorefunction(hooked, a) -- Restore a again. assert(a() == aReturn and a() ~= hookedReturn) -- If this script errors, your hookfunction may not be working properly. Example testing upvalue limits: local a = &quot;A&quot; local b = &quot;B&quot; local c = &quot;C&quot; local function a() -- Upvalue count: 3 a = &quot;B&quot; b = &quot;C&quot; c = &quot;D&quot; end local function b() -- Upvalue Count: 2 a = &quot;E&quot; b = &quot;F&quot; end a() -- Set variables local original = closures.hookfunction(a, b) -- If this call fails, consider implicitly wrapping `b` in a newlclosure! a() assert(a == &quot;E&quot; and b == &quot;F&quot; and c == &quot;D&quot;) -- If this errors, the upvalues are improperly set, and this could lead to a crash! assert() Example testing hooking pairs: local upref = false local dummyFunc = function(f) upref = f == &quot;Hello&quot; end local old; old = closures.hookfunction(coroutine.resume, dummyFunc) -- Hook C -&gt; L. This test also checks that hookfunction can bypass upvalue limits. coroutine.resume(&quot;Hello&quot;) if not upref then error(&quot;hookfunction&quot;, &quot;Failed to hook C -&gt; L Closures&quot;) end upref = false closures.hookfunction(coroutine.resume, old) pcall(coroutine.resume, &quot;Hello&quot;)  ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures##","content":"Type\tDescriptionToo many upvalues!\tThe function to hook has more upvalues than the function you want to hook it with. (This error may not show on some implementations.) This function cannot be hooked from Luau\tThe function has been marked as unhookable by `protectfunction` or by native executor code.  ","version":null,"tagName":"h3"},{"title":"restorefunction​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#restorefunction","content":"&lt;/&gt; closures.restorefunction( restoreWhat: (T...) → U...-- The function that should be restored. ) → () Restores any hooks done to restoreWhat, regardless of the hook type (i.e., C closure hook, Luau closure hook, ...) and of how many hooks were done to restoreWhat. Vulnerability This function is vulnerable to the savedpc vulnerability, refer to hookfunction's documentation on how to fix this vulnerability! ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures##","content":"Type\tDescriptionFunction is not hooked\tThe function is not hooked, and thus cannot be restored. Use `ishooked` before calling this function!  ","version":null,"tagName":"h3"},{"title":"loadstring​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#loadstring","content":"&lt;/&gt; closures.loadstring( luauCode: string,-- The code to compile and load. chunkName: string?-- The name of the chunk to load. ) → ( ((T...) → U...) | nil,-- The loaded function, if loading succeeded. string?-- The error message, if loading failed. ) Compiles and loads the given luauCode. If chunkName is not provided, it must default to either: a pseudo-randomly generated string, or =loadstring. Loadstring must compile the code with the following compile configuration: - Optimization Level 1 - Debug Level 1 The function must also mark the environment as 'unsafe' to disable environment optimizations as per Luau specifications. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures##","content":"Type\tDescriptionN/A\tThis function does not explicitly error, however it returns an error message if the code fails to load in the second return.  ","version":null,"tagName":"h3"},{"title":"newcclosure​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#newcclosure","content":"&lt;/&gt; closures.newcclosure( fn: (T...) → U...,-- Function to wrap debugName: string?-- The name of the function, optional. ) → (T...) → U... Wraps the given closure into a upvalue-less C closure. Detections The proxy emited by newlclosure and the called function MUST be automatically hidden from the callstack using sethiddenstack to prevent callstack attacks. While executor functions are automatically hidden, if the closure given is not a hidden function (i.e., a roblox or game function) you must hide it accordingly. Yielding The emitted closure must yield. To implement this, check for lua_pcall on the Luau source!  ","version":null,"tagName":"h3"},{"title":"newlclosure​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#newlclosure","content":"&lt;/&gt; closures.newlclosure( fn: (T...) → U...-- Function to wrap ) → (T...) → U... Wraps the given closure into a upvalue-less L closure. Obfuscators Obfuscators like Luraph™ use the function environment to wrap closures and bypass upvalue limits. Make sure that the environment of the pushed wrapper proxies the environment of the original function using __index. This should fix issues relating to Luraph™ not working with this function. WARNING This function, depending on the implementation, may rely on function environments to work or in a closure map-backed proxy function (like in newcclosure). Beware of this when using the function. Detections The proxy emited by newlclosure and the called function MUST be automatically hidden from the callstack using sethiddenstack to prevent callstack attacks. While executor functions are automatically hidden, if the closure given is not a hidden function (i.e., a roblox or game function) you must hide it accordingly. Example Implementation (In Luau) local function newlclosure&lt;T..., U...&gt;(f: (T...) -&gt; U...): (T...) -&gt; U... local env = getfenv(f) -- Get environment (env of f gets deoptimized) local x = setmetatable({ __F = f, -- Store function on environment (prevents upreference) }, { __index = env, -- proxy original fenv for obfuscator support __newindex = env, -- proxy original fenv for obfuscator support }) local nf = function(...) return __F(...) -- proxy call end setfenv(nf, x) -- set func env (env of nf gets deoptimized) return nf end   ","version":null,"tagName":"h3"},{"title":"wrapclosure​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#wrapclosure","content":"&lt;/&gt; closures.wrapclosure( fn: (T...) → U...-- Function to wrap ) → (T...) → U...-- A copy of the function, without upvalues. Wraps the given closure into an upvalue-less version of itself. INFO This function is a proxy to the correct implementation of newcclosure/ newlclosure. Examples: local b = &quot;b&quot; local function a() -- Upvalue Count: 1 ('b') b = &quot;a&quot; end assert(#debug.getupvalues(a) == 1, &quot;debug.getupvalues failure&quot;) -- Validate the behaviour of debug.getupvalues. assert(#debug.getupvalues(closures.wrapclosure(a)) == 0, &quot;wrapped closure has upreferences/upvalues&quot;) assert(islclosure(a) == iscclosure(closures.wrapclosure(a)), &quot;closure type mismatch&quot;) -- If this script errors, your wrapclosure may not be working properly.   ","version":null,"tagName":"h3"},{"title":"isexecutorclosure​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#isexecutorclosure","content":"&lt;/&gt; closures.isexecutorclosure( fn: (T...) → U...-- The function to check. ) → boolean-- Whether the function is an executor closure. Checks if the given function is an executor closure. Implementation The function may use any method, as long as it returns true for executor Luau and C functions, as well as hooked functions, and false for any non-executor functions. This means that functions retrieved from loadstring or getscriptclosure will also return true.  ","version":null,"tagName":"h3"},{"title":"clonefunction​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#clonefunction","content":"&lt;/&gt; closures.clonefunction( fn: (T...) → U...-- The function to clone. ) → (T...) → U...-- A clone of the function. Clones the given function, providing a unique copy of it that is completely unrelated to fn. Obfuscator Support You must note that a cloned Luau function must have the SAME environment as the original function. If you do not provide an environment and an obfuscator depends on it for upvalues, you may face script errors. This has been documented behaviour on scripts obfuscated by obfuscators such as Luraph, where newlclosure and/or clonefunction do not properly set the environment of the cloned function, which causes script errors.  ","version":null,"tagName":"h3"},{"title":"isfunctionprotected​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#isfunctionprotected","content":"&lt;/&gt; closures.isfunctionprotected( fn: (T...) → U...-- The function to check. ) → boolean-- If true, the function is protected against hooking. Returns if the given function is protected against hooks. Whitelists You can use this function if your executor abides by rSUNC to determine if the environment is proper for your whitelist.  ","version":null,"tagName":"h3"},{"title":"ishooked​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#ishooked","content":"&lt;/&gt; closures.ishooked( fn: (T...) → U...-- The function to check. ) → boolean-- Whether the function has been hooked. Returns if the given function has been hooked. Whitelists You can use this function if your executor abides by rSUNC to determine if the environment is proper for your whitelist.  ","version":null,"tagName":"h3"},{"title":"protectfunction​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#protectfunction","content":"&lt;/&gt; closures.protectfunction( fn: (T...) → U...-- The function to make unhookable and remove all hooks of. ) → () Makes a function unable to be hooked. This function automatically reverts ANY hooks placed on the function if there are any set.  ","version":null,"tagName":"h3"},{"title":"comparefunction​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#comparefunction","content":"&lt;/&gt; closures.comparefunction( fn1: (T...) → U...,-- The first function to compare. fn2: (T...) → U...-- The second function to compare. ) → boolean-- Whether the two functions point to the same code. Returns true if the function points to the same code. The function should return false if the function type results in a mis-match (i.e., fn1 is a Luau closure and fn2 is a C closure). newcclosures/ newlclosure comparison For newcclosures and newlclosures, the result must be derived from the 'deepest' closure it wraps. For example, if fn1 is a newcclosure that wraps a newlclosure that wraps a luau function, and fn2 is a Luau function, you must search to the deepest call fn1 can do and check if it is fn2. The same should happen if fn2 is the nested one and fn1 is a luau function. This function does not check if the function code is the same, only if the two functions point to the same 'Prototype' or 'C function'. Examples print&quot;comparefunction test&quot; local x = function() end print(comparefunction(function() end, function() end)) -- false print(comparefunction(x, x)) -- true print(comparefunction(x, clonefunction(x))) -- true print(comparefunction(x, newcclosure(x))) -- true print(comparefunction(x, newlclosure(x))) -- true print(comparefunction(newcclosure(x), x)) -- true print(comparefunction(newlclosure(x), x)) -- true print(comparefunction(print, newcclosure(print))) -- true print(comparefunction(print, newlclosure(print))) -- true print(comparefunction(print, newcclosure(warn))) -- false print(comparefunction(print, newlclosure(warn))) -- false print(comparefunction(newcclosure(print), newcclosure(print))) -- true print(comparefunction( newcclosure( newlclosure( newcclosure( print ) ) ), newlclosure( newcclosure( newlclosure( print ) ) )) ) -- true print&quot;comparefunction test end&quot;   ","version":null,"tagName":"h3"},{"title":"iswrappedclosure​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#iswrappedclosure","content":"&lt;/&gt; closures.iswrappedclosure( fn: (T...) → U...-- The function to check. ) → boolean-- Whether the function has been wrapped using a wrapper function, such as newlclosure, newcclosure or wrapclosure. Returns if the given function is a wrapper function.  ","version":null,"tagName":"h3"},{"title":"sethiddenstack​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#sethiddenstack","content":"&lt;/&gt; closures.sethiddenstack( fnOrLevel: number | (T...) → U...,-- The function or stack level to hide. hidden: boolean-- If true, the function will be hidden from the callstack, else it will be unhidden. ) → () Hides a function from functions which expose the callstack to users (i.e., getfenv, setfenv, debug.info and debug.traceback). Implementation You must hide the Proto and the backing C function, not the actual Closure object. This is because the closure can be cloned, and then it will appear on the callstack! INFO All executor functions must be hidden from the callstack by default, and this cannot change regardless of the users' desire.  ","version":null,"tagName":"h3"},{"title":"ishiddenstack​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#ishiddenstack","content":"&lt;/&gt; closures.ishiddenstack( fnOrLevel: number | (T...) → U...-- The function or stack level to check. ) → boolean-- If true, the function is hidden from the callstack. Returns if the given function or stack level is hidden from functions which expose the callstack to users. INFO All executor functions must be hidden from the callstack by default, and this cannot change regardless of the users' desire.  ","version":null,"tagName":"h3"},{"title":"trampoline_call​","type":1,"pageTitle":"closures","url":"/rSUNC/api/closures#trampoline_call","content":"&lt;/&gt; closures.trampoline_call( fn: (T...) → U...,-- The function to call with the fake stack and new thread. stackLevels: {CallStack},-- An array of callstacks, the first item will be the beginning of the callstack. threadInitializationInformation: ThreadInitializationInformation,-- The thread initialization information to use. ...: K...-- Additional arguments to pass to the function. ) → ( boolean,-- Whether the function was successfully called. J...-- The return of the function ) Creates a new thread and sets up a fake call stack for it, then calls the given function. INFO If on the stackLevels, a CallStack's currentline is not given (i.e., nil), the beginning of the function must be used by default. ","version":null,"tagName":"h3"},{"title":"runtime","type":0,"sectionRef":"#","url":"/rSUNC/api/runtime","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#functions","content":" ","version":null,"tagName":"h2"},{"title":"disablenative​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#disablenative","content":"&lt;/&gt; runtime.disablenative( fn: (T...) → U...-- The function to disable native code execution for. ) → () Disables the execution of native generated code for the provided function. Hooking functions You may need to call this function in the future before hooking functions! Example -- This signals the compiler to enable native code generation on the protos the main proto contains! -- This means herein if the LVM supports native code, it will be enabled for the functions the code has (and if the compiler believes it to be 'benefitial'!) --!native local function a() local function b() print(&quot;hi b&quot;) print(runtime.isnativecode(a)) -- true print(runtime.isnativecode(b)) -- true runtime.disablenative(debug.info(1, &quot;f&quot;)) -- entry point is now bytecode, should be able to be restored without limitations. runtime.disablenative(debug.info(2, &quot;f&quot;)) -- entry point is now bytecode, should be able to be restored without limitations. print(runtime.isnativecode(a)) -- false print(runtime.isnativecode(b)) -- false end print(&quot;hi a&quot;) b() end -- Uncomment if you remove --!native -- runtime.enablenative(a) a() Implementation Depending on your implementation, you may be unable to remove native code from a function that is on the callstack currently. Investigate into the CodeGen implementation to learn how to do things properly. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime##","content":"Type\tDescriptionVM is not supported\tThe VM does not support native code.  ","version":null,"tagName":"h3"},{"title":"enablenative​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#enablenative","content":"&lt;/&gt; runtime.enablenative( fn: (T...) → U...-- The function to enable native code execution for. ) → () Enables the execution of native generated code, if the Lua(u) VM is prepared for it. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime##","content":"Type\tDescriptionVM is not supported\tThe VM does not support native code.  ","version":null,"tagName":"h3"},{"title":"isnativecode​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#isnativecode","content":"&lt;/&gt; runtime.isnativecode( fn: (T...) → U...-- The function to check. ) → boolean-- Whether the function is implemented in native code or running with a native code implementation. Checks if the current function is implemented in the form of native code (implemented in C or runs with generated native code).  ","version":null,"tagName":"h3"},{"title":"can_vm_run_native_code​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#can_vm_run_native_code","content":"&lt;/&gt; runtime.can_vm_run_native_code() → boolean-- Whether the VM can run native code. Checks if the current Lua(u) VM can run native code.  ","version":null,"tagName":"h3"},{"title":"getstringatom​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getstringatom","content":"&lt;/&gt; runtime.getstringatom( str: string-- The string to get the atom of. ) → number-- The atom of str, as a signed 16 bit integer (short/I16/std::int16_t). Obtains the 'atom' of the given string str.  ","version":null,"tagName":"h3"},{"title":"getstringhash​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getstringhash","content":"&lt;/&gt; runtime.getstringhash( str: string-- The string to get the hash of. ) → number-- The hash of str, as an unsigned integer. Obtains the hash of the given string str that was assigned to it by Lua(u).  ","version":null,"tagName":"h3"},{"title":"enablepointerencoding​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#enablepointerencoding","content":"&lt;/&gt; runtime.enablepointerencoding() → () Enables pointer encoding for the Lua(u) VM. Implementation This function should be implemented as a way to restore the pointer encryption key to the original value, using the key that RBX::ScriptContext contains. While any value is acceptable, it is recommended to use the value from RBX::ScriptContext in order to avoid issues.  ","version":null,"tagName":"h3"},{"title":"disablepointerencoding​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#disablepointerencoding","content":"&lt;/&gt; runtime.disablepointerencoding() → () Disables pointer encoding for the Lua(u) VM. Executor Development This can help locate objects in memory to find out about their true structure in memory.  ","version":null,"tagName":"h3"},{"title":"getrawaddress​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getrawaddress","content":"&lt;/&gt; runtime.getrawaddress( obj: any-- The object to retrieve the address of. ) → string-- The raw address. Gets the raw address of the provided value using topointer.  ","version":null,"tagName":"h3"},{"title":"isinstance​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#isinstance","content":"&lt;/&gt; runtime.isinstance( obj: userdata-- The object to check. ) → boolean-- Whether the object is a userdata of type Instance. Returns whether the given object is a userdata of type Instance. Implementation This function should NEVER be implemented as a __type check. You must figure out a way to do it yourself.  ","version":null,"tagName":"h3"},{"title":"getuserdatatag​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getuserdatatag","content":"&lt;/&gt; runtime.getuserdatatag( obj: userdata-- The object which inherits from userdata. ) → number-- The userdata tag of the object. Returns the userdata tag for the provided object.  ","version":null,"tagName":"h3"},{"title":"setluaufflag​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#setluaufflag","content":"&lt;/&gt; runtime.setluaufflag( flagName: string,-- The name of the flag to set. flagValue: boolean-- The value to set the flag to. ) → () Sets a fast flag in the Lua(u) VM for specific behaviour. Implementation This functions should affect the Roblox VM as well if you are using a RVM/CLVM execution method.  ","version":null,"tagName":"h3"},{"title":"disableerrorlogging​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#disableerrorlogging","content":"&lt;/&gt; runtime.disableerrorlogging() → () Disables the error logging Roblox does on the VM. This is NOT the same as disabling error logging in the VM itself, it simply disables the ScriptContext.Error signal. Implementation This function can be implemented using hooksignal or getconnections, but it must continue to work even if new connections are added to the event.  ","version":null,"tagName":"h3"},{"title":"enableerrorlogging​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#enableerrorlogging","content":"&lt;/&gt; runtime.enableerrorlogging() → () Enables the error logging Roblox does on the VM. This is NOT the same as disabling error logging in the VM itself, it simply enables the ScriptContext.Error signal again after being disabled.  ","version":null,"tagName":"h3"},{"title":"getrbxbuildhash​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getrbxbuildhash","content":"Optional &lt;/&gt; runtime.getrbxbuildhash() → string-- The ROBLOX build hash. Returns the Version hash of the current, running ROBLOX version. The version hash is the hash that follows the 'version' string in version-....  ","version":null,"tagName":"h3"},{"title":"gethwid​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#gethwid","content":"&lt;/&gt; runtime.gethwid() → string-- The hash of your tool's calculated HWID, as a hex string. Returns the HWID for the running computer. HWID Hashing After performing your own tool's HWID calculations, you are expected to provide a hex-formatted hash that cannot be reconstructed back to the original HWID.  ","version":null,"tagName":"h3"},{"title":"checkcaller​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#checkcaller","content":"&lt;/&gt; runtime.checkcaller() → boolean-- Whether the current thread was created by the executor. Returns whether the current thread was created by the executor.  ","version":null,"tagName":"h3"},{"title":"getnamecallmethod​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getnamecallmethod","content":"&lt;/&gt; runtime.getnamecallmethod() → string?-- The namecall method, if nil, there is no namecall set. Returns the current namecall method.  ","version":null,"tagName":"h3"},{"title":"setnamecallmethod​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#setnamecallmethod","content":"&lt;/&gt; runtime.setnamecallmethod( newNamecall: string-- The namecall method to set. ) → string?-- The namecall method, if nil, there is no namecall set. Sets the current namecall method. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime##","content":"Type\tDescriptionno namecall currently\tThere is no namecall currently occurring.  ","version":null,"tagName":"h3"},{"title":"getthreadidentity​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getthreadidentity","content":"&lt;/&gt; runtime.getthreadidentity( th: thread?-- The thread to get the identity of (if nil, defaults to current thread) ) → number-- The thread identity of the current thread (or given thread) Gets the current thread identity and capabilities.  ","version":null,"tagName":"h3"},{"title":"setthreadidentity​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#setthreadidentity","content":"&lt;/&gt; runtime.setthreadidentity( threadIdentity: number-- The thread identity to set. Must be between 0 and 8 ) → () Sets the current thread identity and capabilities.  ","version":null,"tagName":"h3"},{"title":"setfpscap​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#setfpscap","content":"&lt;/&gt; runtime.setfpscap( fps: number?-- The maximum amount of frames per second (fps). If no value is provided, it automatically defaults to 1000. ) → () Sets the maximum amount of frames per second (fps) to run the game engine can run at. Implementation This function should set the FPS to 1000 if the valueo of fps is 0. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime##","content":"Type\tDescriptioninvalid fps value\tThe fps value is invalid, i.e., it is less than 0  ","version":null,"tagName":"h3"},{"title":"getfpscap​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getfpscap","content":"&lt;/&gt; runtime.getfpscap() → number-- The current target FPS of the game engine. Sets the maximum amount of frames per second (fps) to run the game engine can run at.  ","version":null,"tagName":"h3"},{"title":"rubisload​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#rubisload","content":"Optional &lt;/&gt; runtime.rubisload() → ((() → ()) | nil),string?-- The closure that was loaded, if successful, or nil if it failed with a second string return. Loads a scrap from the Rubis API. TIP This is simply loadstring, but specific towards the Rubis API.  ","version":null,"tagName":"h3"},{"title":"getbytecode​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#getbytecode","content":"Optional &lt;/&gt; runtime.getbytecode( luauCode: string-- The Luau code to get the bytecode of. ) → string-- The bytecode of the given Luau code. Returns the bytecode of the given Luau code.  ","version":null,"tagName":"h3"},{"title":"decompile​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#decompile","content":"Optional &lt;/&gt; runtime.decompile( luauBytecodeOrScript: LuaSourceContainer | string-- The Luau bytecode or script to decompile. ) → string-- The decompiled Luau bytecode. Decompiles the given Luau bytecode or script.  ","version":null,"tagName":"h3"},{"title":"disassemble​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#disassemble","content":"Optional &lt;/&gt; runtime.disassemble( luauBytecodeOrScript: LuaSourceContainer | string-- The Luau bytecode or script to decompile. ) → string-- The disassembled Luau bytecode. Disassembles the given Luau bytecode or script.  ","version":null,"tagName":"h3"},{"title":"setcalltrace​","type":1,"pageTitle":"runtime","url":"/rSUNC/api/runtime#setcalltrace","content":"Optional &lt;/&gt; runtime.setcalltrace( isEnabled: boolean-- Whether to enable call tracing. ) → boolean Allows you to trace execution calls to diagnose a crash. ","version":null,"tagName":"h3"},{"title":"instances","type":0,"sectionRef":"#","url":"/rSUNC/api/instances","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#types","content":" ","version":null,"tagName":"h2"},{"title":"TouchType​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#TouchType","content":"Type &lt;/&gt; type TouchType = 1 | 0 Describes a TouchType for the firetouchinterest function. 1 stands for Touch, while 0 stands for TouchEnded. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#functions","content":" ","version":null,"tagName":"h2"},{"title":"cloneref​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#cloneref","content":"&lt;/&gt; instances.cloneref( object: Instance -- The instance to clone. ) → Instance -- A brand new reference to the given instance. Clones a reference of the given instance. Usage By cloning references to instances, you can bypass weak table-style attacks, which is a way of detecting references to objects which should not have references.  ","version":null,"tagName":"h3"},{"title":"compareinstances​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#compareinstances","content":"&lt;/&gt; instances.compareinstances( object1: Instance ,-- The first instance. object2: Instance -- The second instance. ) → boolean-- If true, both references point to the same instance, else false. Compares the underlying instances of two object references. Usage instances.cloneref allows you to clone a reference to an object, this breaks the normal way Roblox performs equality checks. This function allows you to compare the actual thing the two references point to, allowing you to know if they reference the same instance!  ","version":null,"tagName":"h3"},{"title":"invalidatereference​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#invalidatereference","content":"&lt;/&gt; instances.invalidatereference( object: Instance -- The instance to invalidate. ) → () Invalidates the reference of the given instance. Usage Invalidating the reference to an instance allows you to make subsequent calls to certain functions return a different pointer instead of the one you have. This also makes the reference you hold unique to you up to that point. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionThe reference cannot be invalidated (not in cache)\tThe reference you provided cannot be invalidated, this is due to it not being on the instance cache.  ","version":null,"tagName":"h3"},{"title":"isreferencevalid​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#isreferencevalid","content":"&lt;/&gt; instances.isreferencevalid( object: Instance -- The instance to check. ) → boolean-- If true, the reference to the instance is still valid. Checks if the reference to the given instance is still valid. Usage This function is used to check if an instance is still valid after the reference is invalidated using instances.invalidatereference.  ","version":null,"tagName":"h3"},{"title":"replacereference​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#replacereference","content":"&lt;/&gt; instances.replacereference( object1: Instance ,-- The instance to replace. object2: Instance -- The instance to replace it with. ) → () Makes all references that are object1 point to what object2 is referencing instead. Usage You can use this function to replace references to an instance all throughout the game. i.e.: replacing a Value instance and affecting all already obtained references to it. Remarks Some instances, such as the DataModel (aka game), are not affected by this function. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionThe reference cannot be modified (not in cache)\tThe reference you provided cannot be modified, this is due to it not being on the instance cache.  ","version":null,"tagName":"h3"},{"title":"getplaceversion​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getplaceversion","content":"&lt;/&gt; instances.getplaceversion() → number-- The version of the place. Gets the version of the ROBLOX place you are in. Usage This function can be used to guarantee features work only on a version deemed 'safe' of the game. Useful for premium scripts.  ","version":null,"tagName":"h3"},{"title":"getcallbackvalue​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getcallbackvalue","content":"&lt;/&gt; instances.getcallbackvalue( instance: Instance ,-- The instance to get the callback value from. prop: string-- The name of the callback property. ) → (T...) → U...-- The callback that the instance contains at the given property. Gets the callback value of the given instance and property. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionproperty with name '%s' does not exist.\tThe given property (named %s) does not exist on the given instance.  ","version":null,"tagName":"h3"},{"title":"gethiddenproperty​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#gethiddenproperty","content":"&lt;/&gt; instances.gethiddenproperty( instance: T &amp; Instance ,-- The instance to get the property from. prop: string-- The property to get. ) → ( U,-- The value of the property. boolean-- True if the property was hidden, false if it was not. ) Gets the property of the given instance. Remarks You must support pushing unserializable properties such as 'SharedString' and 'SystemAddress'. Implementation You are supposed to obtain the property using the RBX::Instance::getProperty/ RBX::Instance::setProperty methods. You must not set the property public or scriptable. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionproperty with name '%s' does not exist.\tThe given property (named %s) does not exist on the given instance.  ","version":null,"tagName":"h3"},{"title":"getsenv​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getsenv","content":"&lt;/&gt; instances.getsenv( script: LuaSourceContainer -- The script to obtain the environment of. ) → T | nil-- The environment of the script, nil if the script is not running. Gets the environment of a running script. Implementation This function may perform GC scans to find script threads and obtain their environment. Actors If the script is running in a different mainthread you must throw the 'script is running in a different Luau VM' error in order to prevent possible vulnerabilities and other issues associated with actors. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionscript is running in a different Luau VM\tThe script you tried to get the environment does not share the same mainthread state (Running under an actor/ in a different Luau VM).  ","version":null,"tagName":"h3"},{"title":"getscriptclosure​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getscriptclosure","content":"&lt;/&gt; instances.getscriptclosure( instance: LuaSourceContainer -- The script to get the closure of. ) → ((T...) → (U...)) | nil-- The 'main' closure of the script, nil if the script has no bytecode. Gets a non-runnable closure which holds debug info (constants, upreferences, debugname, etc) of the script's main thread. Implementation This function may not perform a GC scan in an effort to find the Script object. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionCannot get closure of a server script\tThe script provided is a server script, and its source isn't available.  ","version":null,"tagName":"h3"},{"title":"exchangeinstancepointer​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#exchangeinstancepointer","content":"&lt;/&gt; instances.exchangeinstancepointer( object1: Instance ,-- The first instance. object2: Instance -- The second instance. ) → () Exchanges the underlying pointer between two instances. Usage This can be used in place of instances.replacereference if the user already holds a reference to the object you want replaced. This function, unlike instances.replacereference will overwrite the underlying pointer to the instance in the provided reference. This makes it so all instances of this reference are affected, regardless of whether they're just newly obtained from the Instance cache. Implementation The instances MUST be strictly checked to be such.  ","version":null,"tagName":"h3"},{"title":"fireclickdetector​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#fireclickdetector","content":"&lt;/&gt; instances.fireclickdetector( detector: ClickDetector ,-- The click detector to fire the event on. distance: number?,-- The distance to fire the event at, if nil, defaults to 0. eventName: &quot;MouseClick&quot; | &quot;RightMouseClick&quot; | &quot;MouseHoverEnter&quot; | &quot;MouseHoverLeave&quot; | nil-- The event to fire, if nil, defaults to &quot;MouseClick&quot; ) → () Fires a click detector event, which replicates to the server. Implementations You should not implement this function in luau.  ","version":null,"tagName":"h3"},{"title":"firetouchinterest​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#firetouchinterest","content":"&lt;/&gt; instances.firetouchinterest( part1: BasePart ,-- The first part. part2: BasePart ,-- The second part. touchType: TouchType-- The event to fire. ) → () Fires a physics interaction between BasePart objects, which replicates to the server. Implementations You should not implement this function in luau. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionno world found\tNo RBX::World was found for either Part1 or Part2. overlap in a different world\tPart1 and Part2 live in different RBX::World's and they cannot interact with each other.  ","version":null,"tagName":"h3"},{"title":"fireproximityprompt​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#fireproximityprompt","content":"&lt;/&gt; instances.fireproximityprompt( prompt: ProximityPrompt -- The prompt to fire the event on. ) → () Fires a proximity prompt's Triggered event, which replicates to the server. Implementations You should not implement this function in luau.  ","version":null,"tagName":"h3"},{"title":"gethui​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#gethui","content":"&lt;/&gt; instances.gethui() → Folder -- The folder which is hidden from the game context. Returns the folder used by the executor to place User Interfaces. Weak-Table attacks This function may be vulnerarble to weak-table style attacks if not properly implemented. Make a folder, parent it to CoreGui, and then use instances.invalidatereference on it, then return the created folder, this should protect you from this kind of attack! ContentProvider attacks Game developers can use ContentProvider:PreloadAsync to detect assets loaded in CoreGui when they should not be loaded, due to this they can check if any UI has been loaded that is not the default ROBLOX Core Gui. You must protect yourself from this kind of attack by caching the return of CoreGui for the function, and returning the cached value after gethui is called. This should maintain the integrity of the system while hiding the new assets that are loaded on CoreGui. This change may also be needed on the game instance.  ","version":null,"tagName":"h3"},{"title":"getinstances​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getinstances","content":"&lt;/&gt; instances.getinstances() → {Instance }-- All instances that are currently referenced by the game. Returns a list with all instances that are currently referenced by the game. Actors If an instance is referenced inside an actor, this list of instances should not contain it!  ","version":null,"tagName":"h3"},{"title":"getnilinstances​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getnilinstances","content":"&lt;/&gt; instances.getnilinstances() → {Instance }-- All instances that are currently referenced by the game, but with no parent. Returns a list with all instances that are currently referenced by the game and are not parented anything. Actors If an instance is referenced inside an actor, this list of instances should not contain it!  ","version":null,"tagName":"h3"},{"title":"getinstancelist​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getinstancelist","content":"&lt;/&gt; instances.getinstancelist() → {[userdata]: Instance }-- The internal list ROBLOX uses for holding references to instances in Luau. Returns a dictionary with all instances that are currently referenced by the game as their value, and a lightuserdata as their key. This dictionary is also known as the instance cache. Actors If an instance is referenced inside an actor, this list of instances should not contain it!  ","version":null,"tagName":"h3"},{"title":"getconnections​","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances#getconnections","content":"&lt;/&gt; instances.getconnections( signal: RBXScriptSignal -- The signal instance (e.g., game.Players.PlayerAdded) to get connections from. ) → {Connection}-- An array-like table containing Connection objects for each active connection to the signal. Retrieves a list of connection objects associated with a given signal. Usage This function allows you to inspect and manage individual connections to a signal. You can check properties like the connected function, its thread, whether it's enabled, or even manually fire, defer, enable, disable, or disconnect specific connections. Remarks Calling Disconnect on a Connection object invalidates it. Subsequent attempts to use the object will result in an error. Fire and Defer methods will not work for connections where ForeignState is true (i.e., C functions or connections from different Luau VMs). The order of connections in the returned table might not be predictable. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"instances","url":"/rSUNC/api/instances##","content":"Type\tDescriptionExpected RBXScriptSignal\tThe provided argument was not an `RBXScriptSignal`. connection cannot be obtained\tAn internal error occurred while trying to access the connection list. ","version":null,"tagName":"h3"}],"options":{"id":"default"}}